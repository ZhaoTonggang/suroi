var fe=Object.defineProperty;var xe=(e,r,t)=>r in e?fe(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var f=(e,r,t)=>xe(e,typeof r!="symbol"?r+"":r,t);import{K as p}from"./vendor-CeA792Xf.js";const Y=[],F=Object.create(null);let K=!1;const se=(e,r)=>e.writeUint16(F[typeof r=="string"?r:r.idString]),ne=e=>{const r=e.readUint16(),t=Y[r];if(t===void 0)throw new RangeError(`Bad index ${r}`);return t},ie=e=>{const r=Y[F[e]];if(r===void 0)throw new ReferenceError(`idString '${e}' does not exist in the global registry`);return r},oe=e=>e in F,N=[],D={register(e){N.push(e)},writeToStream(e,r){return U(),se(e,r)},readFromStream(e){return U(),ne(e)},fromString(e){return U(),ie(e)},hasString(e){return U(),oe(e)}};function U(){if(K)throw new Error("init called more than once");K=!0,N.sort(({name:t},{name:s})=>t<s?-1:1),D.writeToStream=se,D.readFromStream=ne,D.fromString=ie,D.hasString=oe,D.register=t=>{throw new Error("Cannot register a schema after the registry has been initialized")},Object.freeze(D);const e=N.length;let r=0;for(let t=0;t<e;t++){const{definitions:s}=N[t],n=s.length;for(let o=0;o<n;o++){const a=s[o],{idString:c}=a;if(c in F)throw new Error(`Duplicate idString '${c}' in registry`);Y.push(a),F[c]=r++}}if(r>65536)throw new RangeError("Global registry too large for 2 bytes.")}function j(e){return e&&typeof e=="object"&&!Array.isArray(e)}function Ye(e,r){return"err"in e?r():e.res}function S(e,...r){if(!r.length)return e;const[t,...s]=r;if(t)for(const n of Object.keys(t).concat(Object.getOwnPropertySymbols(t))){const[o,a]=[t[n],e[n]];if(j(o)){j(a)?S(a,o):e[n]=ce(o);continue}e[n]=o}return S(e,...s)}const B=Symbol("clone deep"),ae=Symbol("clone");function ce(e){const r=new Map;return function t(s){if(!j(s)&&!Array.isArray(s))return s;if(r.has(s))return r.get(s);if(B in s){const a=s[B];if(typeof a=="function"&&a.length===0)return a.call(s);console.warn(`Inappropriate use of ${B.toString()}: it should be a no-arg function`)}const n=(a,c=()=>!0)=>{for(const[l,h]of Object.entries(Object.getOwnPropertyDescriptors(s)).filter(c))h.value=t(s[l]),Object.defineProperty(a,l,h);return a},o=Object.getPrototypeOf(s);switch(!0){case s instanceof Array:{const a=Object.create(o);r.set(s,a);for(let c=0,l=s.length;c<l;c++)a[c]=t(s[c]);return n(a,([c])=>Number.isNaN(+c))}case s instanceof Map:{const a=new Map;r.set(s,a);for(const[c,l]of s.entries())a.set(t(c),t(l));return Object.setPrototypeOf(a,o),n(a)}case s instanceof Set:{const a=new Set;r.set(s,a);for(const c of s)a.add(t(c));return Object.setPrototypeOf(a,o),n(a)}default:{const a=Object.create(o);return r.set(s,a),n(a)}}}(e)}function le(e){Object.freeze(e);for(const r in e){const t=e[r];typeof t=="object"&&t!==null&&le(t)}return e}class Je{constructor(r,t){f(this,"callback");f(this,"end");f(this,"killed",!1);this.end=t,this.callback=r}kill(){this.killed=!0}}class ue{constructor(){f(this,"_head")}push(r){this._head={value:r,next:this._head}}pop(){const r=this._head;if(!r)throw new Error("Empty stack");const t=r.value;return this._head=r.next,t}peek(){if(!this._head)throw new Error("Empty stack");return this._head.value}has(){return!!this._head}_clone(r=!1){const t=new ue;let s=this._head,n;for(;s!==void 0;){const o=r?{value:ce(s.value)}:s;n=n?n.next=o:t._head=o,s=s.next}return t}[ae](){return this._clone(!1)}[B](){return this._clone(!0)}}class Ve extends Map{_get(r){return super.get(r)}getAndSetIfAbsent(r,t){return this.has(r)?this.get(r):(this.set(r,t),t)}getAndGetDefaultIfAbsent(r,t){if(this.has(r))return this.get(r);const s=t();return this.set(r,s),s}ifPresent(r,t){this.ifPresentOrElse(r,t,()=>{})}ifPresentOrElse(r,t,s){if(!super.has(r))return s();t(this._get(r))}mapIfPresent(r,t){if(super.has(r))return t(this._get(r))}}const G=Symbol("inherit from"),W=()=>(...[e,r])=>{const[t,s]=r===void 0?[e,void 0]:[r,e],n=typeof t=="function",o=s==null?void 0:s.__functionTemplate__,a=s===void 0,c=n?o?(...[[l,h],d])=>S({},s(h,{})??{},t(...l),d??{}):a?(...[l,h])=>S({},t(...l),h??{}):(...[l,h])=>S({},s({})??{},t(...l),h??{}):o?(...[l,h])=>S({},s(l,{})??{},t,h??{}):a?(...[l])=>S({},t,l??{}):(...[l])=>S({},s({})??{},t,l??{});return c.__functionTemplate__=n,c};class Z extends Error{}class M{constructor(r,t,s,n=!1){f(this,"definitions");f(this,"idStringToDef",Object.create(null));this.name=r;function o(a,...c){return G in a?S({},s??{},...[a[G]].flat().map(l=>{const h=t.find(d=>d.idString===l);if(!h)throw new Z(`Definition '${a.idString}' was configured to inherit from inexistent definition '${l}'`);if(c.includes(l))throw new Z(`Circular dependency found: ${[...c,l].join(" -> ")}`);return o(h,...c,h.idString)}),a):s===void 0?a:S({},s,a)}this.definitions=t.map(a=>{const c=o(a,a.idString);return this.idStringToDef[a.idString]=c,c}),n||D.register(this)}static withDefault(){return(r,t,s)=>{const n=W()(t),o=W().bind(null,n);return new M(r,s([o,G,W(),void 0]),t)}}static create(r,t){return new M(r,t)}reify(r){return typeof r=="string"?this.fromString(r):r}fromString(r){const t=this.idStringToDef[r];if(t===void 0)throw new ReferenceError(`Unknown idString '${r}' for this schema`);return t}fromStringSafe(r){return this.idStringToDef[r]}hasString(r){return r in this.idStringToDef}writeToStream(r,t){return D.writeToStream(r,t)}readFromStream(r){const t=D.readFromStream(r);return(t==null?void 0:t.idString)in this.idStringToDef||console.error(`Definition with idString '${t==null?void 0:t.idString}' does not belong to this schema ('${this.name}')`),t}[Symbol.iterator](){return this.definitions[Symbol.iterator]()}}const Ie=Symbol("null idString");var y=(e=>(e[e.Gun=0]="Gun",e[e.Ammo=1]="Ammo",e[e.Melee=2]="Melee",e[e.Throwable=3]="Throwable",e[e.Healing=4]="Healing",e[e.Armor=5]="Armor",e[e.Backpack=6]="Backpack",e[e.Scope=7]="Scope",e[e.Skin=8]="Skin",e[e.Perk=9]="Perk",e))(y||{}),he=(e=>(e[e.Door=0]="Door",e[e.Wall=1]="Wall",e[e.Window=2]="Window",e[e.Stair=3]="Stair",e[e.Activatable=4]="Activatable",e))(he||{}),ge=(e=>(e[e.Grass=0]="Grass",e[e.GrassAndSand=1]="GrassAndSand",e[e.RiverBank=2]="RiverBank",e[e.River=3]="River",e[e.Beach=4]="Beach",e[e.Trail=5]="Trail",e))(ge||{});const He={0:3.4,1:2,2:3,3:3,4:2.5,5:3,6:3,7:3,8:3,9:3},pe=M.withDefault()("Ammos",{itemType:y.Ammo,noDrop:!1,ephemeral:!1,defaultCasingFrame:"",hideUnlessPresent:!1},()=>[{idString:"12g",name:"12 gauge",maxStackSize:20,characteristicColor:{hue:0,saturation:100,lightness:89},defaultCasingFrame:"casing_12ga_275in"},{idString:"556mm",name:"5.56mm",maxStackSize:60,characteristicColor:{hue:120,saturation:100,lightness:75},defaultCasingFrame:"casing_556x45mm"},{idString:"762mm",name:"7.62mm",maxStackSize:60,characteristicColor:{hue:210,saturation:100,lightness:65},defaultCasingFrame:"casing_762x51mm"},{idString:"9mm",name:"9mm",maxStackSize:90,characteristicColor:{hue:48,saturation:100,lightness:75},defaultCasingFrame:"casing_9x19mm"},{idString:"50cal",name:".50 Cal",maxStackSize:9,characteristicColor:{hue:0,saturation:0,lightness:0},defaultCasingFrame:"casing_50bmg",hideUnlessPresent:!0},{idString:"338lap",name:".338 Lapua Magnum",maxStackSize:9,characteristicColor:{hue:75,saturation:100,lightness:75},defaultCasingFrame:"casing_338lap",hideUnlessPresent:!0},{idString:"curadell",name:"Curadell",maxStackSize:10,characteristicColor:{hue:26,saturation:100,lightness:75},defaultCasingFrame:"casing_curadell",hideUnlessPresent:!0},{idString:"firework_rocket",name:"Firework Rocket",maxStackSize:5,characteristicColor:{hue:0,saturation:55,lightness:85},defaultCasingFrame:"casing_firework_rocket",hideUnlessPresent:!0},{idString:"power_cell",name:"P.O.W.E.R. cell",maxStackSize:10,characteristicColor:{hue:190,saturation:100,lightness:85},defaultCasingFrame:"casing_power_cell",ephemeral:!0},{idString:"bb",name:"6mm BB",maxStackSize:240,characteristicColor:{hue:0,saturation:0,lightness:75},ephemeral:!0}]);var be=(e=>(e[e.Health=0]="Health",e[e.Adrenaline=1]="Adrenaline",e))(be||{});const we=M.withDefault()("HealingItems",{itemType:y.Healing,noDrop:!1},([e,,r])=>{const t=e(o=>({idString:o.toLowerCase().replace(/ /g,"_"),name:o})),s=r(t,{healType:0}),n=r(t,{healType:1});return[s(["Gauze"],{restoreAmount:15,useTime:3}),s(["Medikit"],{restoreAmount:100,useTime:6}),n(["Cola"],{restoreAmount:25,useTime:3}),n(["Tablets"],{restoreAmount:50,useTime:5})]}),de=M.withDefault()("Scopes",{itemType:y.Scope,noDrop:!1,giveByDefault:!1},([e])=>{const r=e(t=>({idString:`${t}x_scope`,name:`${t}x Scope`}));return[r([1],{zoomLevel:70,noDrop:!0,giveByDefault:!0}),r([2],{zoomLevel:100}),r([4],{zoomLevel:135}),r([8],{zoomLevel:185}),r([15],{zoomLevel:255})]}),Qe=de.definitions[0],i=Object.freeze({create(e,r){return{x:e,y:r}},add(e,r){return this.create(e.x+r.x,e.y+r.y)},addComponent(e,r,t){return this.create(e.x+r,e.y+t)},sub(e,r){return this.create(e.x-r.x,e.y-r.y)},subComponent(e,r,t){return this.create(e.x-r,e.y-t)},scale(e,r){return this.create(e.x*r,e.y*r)},clone(e){return this.create(e.x,e.y)},rotate(e,r){const t=Math.cos(r),s=Math.sin(r);return this.create(e.x*t-e.y*s,e.x*s+e.y*t)},squaredLength(e){return e.x*e.x+e.y*e.y},length(e){return Math.sqrt(i.squaredLength(e))},direction(e){return Math.atan2(e.y,e.x)},dotProduct(e,r){return e.x*r.x+e.y*r.y},project(e,r){return this.scale(r,this.dotProduct(e,r)/this.squaredLength(r))},normalizeSafe(e,r){r??(r=this.create(1,0));const t=1e-6,s=i.length(e);return s>t?{x:e.x/s,y:e.y/s}:i.clone(r)},normalize(e){const t=i.length(e);return t<1e-6?{x:e.x/t,y:e.y/t}:i.clone(e)},invert(e){return this.create(-e.x,-e.y)},equals(e,r,t=.001){return Math.abs(e.x-r.x)<=t&&Math.abs(e.y-r.y)<=t},angleBetweenVectors(e,r){return Math.acos((e.x*r.x+e.y*r.y)/Math.sqrt(i.length(e)*i.length(r)))},lerp(e,r,t){return i.add(i.scale(e,1-t),i.scale(r,t))},fromPolar(e,r=1){return{x:Math.cos(e)*r,y:Math.sin(e)*r}},addAdjust(e,r,t){if(t===0)return i.add(e,r);let s,n;switch(t){case 1:s=r.y,n=-r.x;break;case 2:s=-r.x,n=-r.y;break;case 3:s=-r.y,n=r.x;break}return i.add(e,i.create(s,n))}}),ye=M.withDefault()("Throwables",{itemType:y.Throwable,speedMultiplier:.92,cookable:!1,fuseTime:4e3,cookTime:150,c4:!1,throwTime:150,noDrop:!1,cookSpeedMultiplier:.7,hitboxRadius:1,impactDamage:0,obstacleMultiplier:20,image:{zIndex:5},maxThrowDistance:128,fireDelay:250,speedCap:1/0},()=>[{idString:"frag_grenade",name:"Frag Grenade",fuseTime:4e3,impactDamage:1,obstacleMultiplier:20,cookable:!0,image:{position:i.create(60,43),angle:60},detonation:{explosion:"frag_grenade_explosion"},animation:{pinImage:"proj_frag_pin",liveImage:"proj_frag",leverImage:"proj_frag_lever",cook:{leftFist:i.create(2.5,0),rightFist:i.create(-.5,2.15)},throw:{leftFist:i.create(1.9,-1.75),rightFist:i.create(4,2.15)}}},{idString:"smoke_grenade",name:"Smoke Grenade",fuseTime:2e3,cookTime:150,throwTime:150,impactDamage:1,obstacleMultiplier:20,image:{position:i.create(60,43),angle:60},detonation:{explosion:"smoke_grenade_explosion",spookyParticles:{type:"plumpkin_smoke_grenade_particle",count:10,deployAnimation:{duration:4e3,staggering:{delay:300,initialAmount:2}},spawnRadius:15},particles:{type:"smoke_grenade_particle",count:10,deployAnimation:{duration:4e3,staggering:{delay:300,initialAmount:2}},spawnRadius:15}},animation:{pinImage:"proj_smoke_pin",liveImage:"proj_smoke",leverImage:"proj_smoke_lever",cook:{cookingImage:"proj_smoke_nopin",leftFist:i.create(2.5,0),rightFist:i.create(-.5,2.15)},throw:{leftFist:i.create(1.9,-1.75),rightFist:i.create(4,2.15)}}},{idString:"confetti_grenade",name:"Confetti Grenade",fuseTime:4e3,cookTime:150,noSkin:!0,throwTime:150,impactDamage:1,obstacleMultiplier:20,cookable:!0,image:{position:i.create(60,43),angle:60},detonation:{explosion:"confetti_grenade_explosion"},animation:{pinImage:"proj_frag_pin",liveImage:"proj_confetti",leverImage:"proj_frag_lever",cook:{leftFist:i.create(2.5,0),rightFist:i.create(-.5,2.15)},throw:{leftFist:i.create(1.9,-1.75),rightFist:i.create(4,2.15)}}},{idString:"c4",name:"C4",c4:!0,health:40,image:{position:i.create(60,43),angle:60},detonation:{explosion:"c4_explosion"},animation:{liveImage:"proj_c4",activatedImage:"proj_c4_activated",cook:{leftFist:i.create(2,-1),rightFist:i.create(3,0)},throw:{leftFist:i.create(1.9,-1.75),rightFist:i.create(4,2.15)}}}]);var Se=(e=>(e[e.MAX_POSITION=1924]="MAX_POSITION",e[e.MIN_OBJECT_SCALE=.15]="MIN_OBJECT_SCALE",e[e.MAX_OBJECT_SCALE=3]="MAX_OBJECT_SCALE",e[e.PLAYER_NAME_MAX_LENGTH=16]="PLAYER_NAME_MAX_LENGTH",e))(Se||{}),_e=(e=>(e[e.OBJECT_SCALE_DIFF=2.85]="OBJECT_SCALE_DIFF",e[e.DOUBLE_MAX_POS=3848]="DOUBLE_MAX_POS",e))(_e||{});const J=Object.create(null);for(const e of[...we,...pe,...de,...ye]){let r=0;switch(!0){case(e.itemType===y.Ammo&&e.ephemeral):r=1/0;break;case(e.itemType===y.Scope&&e.giveByDefault):r=1;break}J[e.idString]=r}Object.freeze(J);const ke=Object.keys(J),Ke=ke.length,ee=Object.freeze([y.Gun,y.Gun,y.Melee,y.Throwable]),De=le({protocolVersion:37,gridSize:32,maxPosition:1924,modeName:"normal",player:{radius:2.25,baseSpeed:.02655,defaultHealth:100,maxAdrenaline:100,inventorySlotTypings:ee,maxWeapons:ee.length,nameMaxLength:16,defaultName:"Player",defaultSkin:"hazel_jumpsuit",killLeaderMinKills:3,maxMouseDist:256,reviveTime:8,maxReviveDist:5,bleedOutDPMs:.002,maxPerkCount:1},gas:{damageScaleFactor:.005,unscaledDamageDist:12},lootSpawnDistance:.7,airdrop:{fallTime:8e3,flyTime:3e4,damage:300},riverPadding:64,trailPadding:384});var Oe=(e=>(e[e.Ground=0]="Ground",e[e.UnderWaterDeathMarkers=1]="UnderWaterDeathMarkers",e[e.UnderWaterDeadObstacles=2]="UnderWaterDeadObstacles",e[e.UnderWaterObstacles=3]="UnderWaterObstacles",e[e.UnderWaterLoot=4]="UnderWaterLoot",e[e.UnderwaterGroundedThrowables=5]="UnderwaterGroundedThrowables",e[e.UnderwaterDownedPlayers=6]="UnderwaterDownedPlayers",e[e.UnderwaterPlayers=7]="UnderwaterPlayers",e[e.BuildingsFloor=8]="BuildingsFloor",e[e.Decals=9]="Decals",e[e.DeadObstacles=10]="DeadObstacles",e[e.DeathMarkers=11]="DeathMarkers",e[e.Explosions=12]="Explosions",e[e.ObstaclesLayer1=13]="ObstaclesLayer1",e[e.Loot=14]="Loot",e[e.GroundedThrowables=15]="GroundedThrowables",e[e.ObstaclesLayer2=16]="ObstaclesLayer2",e[e.TeammateName=17]="TeammateName",e[e.Bullets=18]="Bullets",e[e.DownedPlayers=19]="DownedPlayers",e[e.Players=20]="Players",e[e.ObstaclesLayer3=21]="ObstaclesLayer3",e[e.AirborneThrowables=22]="AirborneThrowables",e[e.ObstaclesLayer4=23]="ObstaclesLayer4",e[e.BuildingsCeiling=24]="BuildingsCeiling",e[e.ObstaclesLayer5=25]="ObstaclesLayer5",e[e.Emotes=26]="Emotes",e[e.Gas=27]="Gas",e))(Oe||{}),me=(e=>(e[e.Basement1=-2]="Basement1",e[e.ToBasement1=-1]="ToBasement1",e[e.Ground=0]="Ground",e[e.ToFloor1=1]="ToFloor1",e[e.Floor1=2]="Floor1",e))(me||{}),Le=(e=>(e[e.All=0]="All",e[e.Adjacent=1]="Adjacent",e[e.Equal=2]="Equal",e))(Le||{}),Ee=(e=>(e[e.Solo=1]="Solo",e[e.Duo=2]="Duo",e[e.Trio=3]="Trio",e[e.Squad=4]="Squad",e))(Ee||{}),Me=(e=>(e[e.Player=0]="Player",e[e.Obstacle=1]="Obstacle",e[e.DeathMarker=2]="DeathMarker",e[e.Loot=3]="Loot",e[e.Building=4]="Building",e[e.Decal=5]="Decal",e[e.Parachute=6]="Parachute",e[e.ThrowableProjectile=7]="ThrowableProjectile",e[e.SyncedParticle=8]="SyncedParticle",e))(Me||{}),Ce=(e=>(e[e.None=0]="None",e[e.Melee=1]="Melee",e[e.Downed=2]="Downed",e[e.ThrowableCook=3]="ThrowableCook",e[e.ThrowableThrow=4]="ThrowableThrow",e[e.GunFire=5]="GunFire",e[e.GunFireAlt=6]="GunFireAlt",e[e.GunClick=7]="GunClick",e[e.LastShot=8]="LastShot",e[e.Revive=9]="Revive",e))(Ce||{}),Pe=(e=>(e[e.DeathOrDown=0]="DeathOrDown",e[e.KillLeaderAssigned=1]="KillLeaderAssigned",e[e.KillLeaderDeadOrDisconnected=2]="KillLeaderDeadOrDisconnected",e[e.KillLeaderUpdated=3]="KillLeaderUpdated",e))(Pe||{}),Re=(e=>(e[e.Inactive=0]="Inactive",e[e.Waiting=1]="Waiting",e[e.Advancing=2]="Advancing",e))(Re||{}),ve=(e=>(e[e.Single=0]="Single",e[e.Burst=1]="Burst",e[e.Auto=2]="Auto",e))(ve||{}),Be=(e=>(e[e.EquipItem=0]="EquipItem",e[e.EquipLastItem=1]="EquipLastItem",e[e.DropWeapon=2]="DropWeapon",e[e.DropItem=3]="DropItem",e[e.SwapGunSlots=4]="SwapGunSlots",e[e.LockSlot=5]="LockSlot",e[e.UnlockSlot=6]="UnlockSlot",e[e.ToggleSlotLock=7]="ToggleSlotLock",e[e.Interact=8]="Interact",e[e.Reload=9]="Reload",e[e.Cancel=10]="Cancel",e[e.UseItem=11]="UseItem",e[e.Emote=12]="Emote",e[e.MapPing=13]="MapPing",e[e.Loot=14]="Loot",e[e.ExplodeC4=15]="ExplodeC4",e))(Be||{}),Fe=(e=>(e[e.BeginSpectating=0]="BeginSpectating",e[e.SpectatePrevious=1]="SpectatePrevious",e[e.SpectateNext=2]="SpectateNext",e[e.SpectateSpecific=3]="SpectateSpecific",e[e.SpectateKillLeader=4]="SpectateKillLeader",e[e.Report=5]="Report",e))(Fe||{}),Te=(e=>(e[e.None=0]="None",e[e.Reload=1]="Reload",e[e.UseItem=2]="UseItem",e[e.Revive=3]="Revive",e))(Te||{}),Ue=(e=>(e[e.Suicide=0]="Suicide",e[e.NormalTwoParty=1]="NormalTwoParty",e[e.FinishedOff=2]="FinishedOff",e[e.FinallyKilled=3]="FinallyKilled",e[e.Gas=4]="Gas",e[e.BleedOut=5]="BleedOut",e[e.Airdrop=6]="Airdrop",e))(Ue||{}),Ne=(e=>(e[e.Kill=0]="Kill",e[e.Down=1]="Down",e))(Ne||{}),qe=(e=>(e[e.NotEnoughSpace=0]="NotEnoughSpace",e[e.ItemAlreadyEquipped=1]="ItemAlreadyEquipped",e[e.BetterItemEquipped=2]="BetterItemEquipped",e[e.CannotUseRadio=3]="CannotUseRadio",e[e.RadioOverused=4]="RadioOverused",e))(qe||{});const Ze={tracer:{opacity:1,width:1,length:1,image:"base_trail",particle:!1,zIndex:18},allowRangeOverride:!1,lastShotFX:!1,noCollision:!1},et={red:11684940,green:9482828,blue:5013426,orange:13005880,purple:10046642},b=Math.PI,X=b/2,te=2*b,tt=b,rt=Object.freeze({betweenPoints(e,r){return Math.atan2(e.y-r.y,e.x-r.x)},normalize(e){return u.absMod(e-b,te)-b},minimize(e,r){return u.absMod(r-e+b,te)-b},degreesToRadians(e){return e*b/180},radiansToDegrees(e){return e/b*180},orientationToRotation(e){return-this.normalize(e*X)}}),u=Object.freeze({absMod(e,r){return e>=0?e%r:(e%r+r)%r},lerp(e,r,t){return e*(1-t)+r*t},clamp(e,r,t){return e<t?e>r?e:r:t},addOrientations(e,r){return(e+r)%4},remap(e,r,t,s,n){return u.lerp(s,n,u.clamp((e-r)/(t-r),0,1))},min(e,r){return e<r?e:r},max(e,r){return e>r?e:r}}),_=Object.freeze({distance(e,r){return Math.sqrt(this.distanceSquared(e,r))},distanceSquared(e,r){return(r.x-e.x)**2+(r.y-e.y)**2},signedAreaTri(e,r,t){return(e.x-t.x)*(r.y-t.y)-(e.y-t.y)*(r.x-t.x)},transformRectangle(e,r,t,s,n){if(r=i.scale(r,s),t=i.scale(t,s),n!==0){const o=r.x,a=r.y,c=t.x,l=t.y;switch(n){case 1:r=i.create(c,a),t=i.create(o,l);break;case 2:r=i.create(c,l),t=i.create(o,a);break;case 3:r=i.create(o,l),t=i.create(c,a);break}}return{min:i.addAdjust(e,r,n),max:i.addAdjust(e,t,n)}}}),x=Object.freeze({circleCollision(e,r,t,s){const n=r+s,o=e.x-t.x,a=e.y-t.y;return n*n>o*o+a*a},rectangleCollision(e,r,t,s){const n={x:u.clamp(t.x,e.x,r.x),y:u.clamp(t.y,e.y,r.y)},o=t.x-n.x,a=t.y-n.y;return o*o+a*a<s*s||t.x>=e.x&&t.x<=r.x&&t.y>=e.y&&t.y<=r.y},rectRectCollision(e,r,t,s){return t.x<r.x&&t.y<r.y&&e.x<s.x&&e.y<s.y},distanceBetweenCircles(e,r,t,s){const n=r+s,o=e.x-t.x,a=e.y-t.y,c=n*n,l=o*o+a*a;return{collided:c>l,distance:l-c}},distanceBetweenRectangleCircle(e,r,t,s){const n=u.clamp(t.x,e.x,r.x)-t.x,o=u.clamp(t.y,e.y,r.y)-t.y,a=s*s,c=n*n+o*o;return{collided:c<a,distance:c-a}},distanceBetweenRectangles(e,r,t,s){const n=u.max(e.x,Math.min(r.x,t.x,s.x))-u.min(e.x,Math.max(r.x,t.x,s.x)),o=u.max(e.y,Math.min(r.y,t.y,s.y))-u.min(e.y,Math.max(r.y,t.y,s.y));return n<0||o<0?{collided:!0,distance:0}:{collided:!1,distance:n*n+o*o}},lineIntersectsLine(e,r,t,s){const n=_.signedAreaTri(e,r,s),o=_.signedAreaTri(e,r,t);if(n!==0&&o!==0&&n*o<0){const a=_.signedAreaTri(t,s,e),c=a+o-n;if(a*c<0)return i.add(e,i.scale(i.sub(r,e),a/(a-c)))}return null},lineSegmentIntersection(e,r,t,s){const n=i.sub(r,e),o=i.sub(s,t),a=n.x*o.y-o.x*n.y;if(a===0)return null;const c=i.sub(e,t),l=c.x*(-1*o.y)- -1*o.x*c.y,h=n.x*c.y-c.x*n.y,d=l/a,m=h/a;return 0<=d&&d<=1&&0<=m&&m<=1?i.create(e.x+d*n.x,e.y+d*n.y):null},lineIntersectsCircle(e,r,t,s){let n=i.sub(r,e);const o=u.max(i.length(n),1e-6);n=i.normalizeSafe(n);const a=i.sub(e,t),c=i.dotProduct(a,n),l=i.dotProduct(a,a)-s*s;if(l>0&&c>0)return null;const h=c*c-l;if(h<0)return null;const d=Math.sqrt(h),m=-c<d?d-c:-c-d;if(m<=o){const g=i.add(e,i.scale(n,m));return{point:g,normal:i.normalize(i.sub(g,t))}}return null},lineIntersectsRect(e,r,t,s){let n=0,o=Number.MAX_VALUE;const a=1e-5,c=e;let l=i.sub(r,e);const h=i.length(l);l=i.normalizeSafe(l);let d=Math.abs(l.x),m=Math.abs(l.y);if(d<a&&(l.x=a*2,d=l.x),m<a&&(l.y=a*2,m=l.y),d>a){const E=(t.x-c.x)/l.x,O=(s.x-c.x)/l.x;if(n=u.max(n,u.min(E,O)),o=u.min(o,u.max(E,O)),n>o)return null}if(m>a){const E=(t.y-c.y)/l.y,O=(s.y-c.y)/l.y;if(n=u.max(n,u.min(E,O)),o=u.min(o,u.max(E,O)),n>o)return null}if(n>h)return null;const g=i.add(e,i.scale(l,n)),R=i.add(t,i.scale(i.sub(s,t),.5)),C=i.sub(g,R),T=i.scale(i.sub(t,s),.5),V=C.x/Math.abs(T.x)*1.001,I=C.y/Math.abs(T.y)*1.001;return{point:g,normal:i.normalizeSafe(i.create(Math.trunc(V),Math.trunc(I)),i.create(1,0))}},lineIntersectsRectTest(e,r,t,s){let n=0,o=Number.MAX_VALUE;const a=1e-5;let c=i.sub(r,e);const l=i.length(c);c=i.normalizeSafe(c);let h=Math.abs(c.x),d=Math.abs(c.y);if(h<a&&(c.x=a*2,h=c.x),d<a&&(c.y=a*2,d=c.y),h>a){const m=(t.x-e.x)/c.x,g=(s.x-e.x)/c.x;if(n=u.max(n,u.min(m,g)),o=u.min(o,u.max(m,g)),n>o)return!1}if(d>a){const m=(t.y-e.y)/c.y,g=(s.y-e.y)/c.y;if(n=u.max(n,u.min(m,g)),o=u.min(o,u.max(m,g)),n>o)return!1}return n<=l},circleCircleIntersection(e,r,t,s){const n=r+s,o=i.sub(t,e),a=i.squaredLength(o);return a<n*n?{dir:i.normalizeSafe(o),pen:n-Math.sqrt(a)}:null},rectCircleIntersection(e,r,t,s){if(e.x<=t.x&&t.x<=r.x&&e.y<=t.y&&t.y<=r.y){const a=i.scale(i.sub(r,e),.5),c=i.sub(t,i.add(e,a)),l=Math.abs(c.x)-a.x-s,h=Math.abs(c.y)-a.y-s;return l>h?{dir:i.create(c.x>0?-1:1,0),pen:-l}:{dir:i.create(0,c.y>0?-1:1),pen:-h}}const n=i.sub(i.create(u.clamp(t.x,e.x,r.x),u.clamp(t.y,e.y,r.y)),t),o=i.squaredLength(n);if(o<s*s){const a=Math.sqrt(o);return{dir:i.normalizeSafe(n),pen:s-a}}return null},distanceToLine(e,r,t){const s=i.sub(t,r);return i.squaredLength(i.sub(i.add(r,i.scale(s,u.clamp(i.dotProduct(i.sub(e,r),s)/i.dotProduct(s,s),0,1))),e))},rayIntersectsLine(e,r,t,s){const n=i.sub(s,t),o=i.create(n.y,-n.x),a=i.dotProduct(r,o);if(Math.abs(a)<=1e-7)return null;const c=i.sub(t,e),l=i.dotProduct(o,c)/a,h=i.dotProduct(i.create(r.y,-r.x),c)/a;return l>=0&&h>=0&&h<=1?l:null},rayIntersectsPolygon(e,r,t){let s=Number.MAX_VALUE,n=!1;for(let o=0,a=t.length,c=a-1;o<a;c=o++){const l=x.rayIntersectsLine(e,r,t[c],t[o]);l!==null&&l<s&&(n=!0,s=l)}return n?s:null},rectRectIntersection(e,r,t,s){const n=i.scale(i.sub(r,e),.5),o=i.scale(i.sub(s,t),.5),a=i.sub(i.add(t,o),i.add(e,n)),c=n.x+o.x-Math.abs(a.x),l=n.y+o.y-Math.abs(a.y);return c>0&&l>0?c>l?{dir:i.create(Math.sign(a.x)||1,0),pen:c}:{dir:i.create(0,Math.sign(a.y)||1),pen:l}:null}});function st(e,r,t){if(!(e.hitbox instanceof w)||e.role!==he.Door)throw new Error("Unable to calculate hitboxes for door: Not a door or hitbox is non-rectangular");switch(e.operationStyle){case"slide":{const s=_.transformRectangle(i.addAdjust(r,i.create((e.hitbox.min.x-e.hitbox.max.x)*(e.slideFactor??1),0),t),e.hitbox.min,e.hitbox.max,1,t);return{openHitbox:new w(s.min,s.max)}}case"swivel":default:{const s=_.transformRectangle(i.addAdjust(r,i.add(e.hingeOffset,i.create(-e.hingeOffset.y,e.hingeOffset.x)),t),e.hitbox.min,e.hitbox.max,1,u.absMod(t+1,4)),n=_.transformRectangle(i.addAdjust(r,i.add(e.hingeOffset,i.create(e.hingeOffset.y,-e.hingeOffset.x)),t),e.hitbox.min,e.hitbox.max,1,u.absMod(t-1,4));return{openHitbox:new w(s.min,s.max),openAltHitbox:new w(n.min,n.max)}}}}function nt(e,r,t,s,n){if(!e.isStair)return console.error("Tried to handle a stair interaction as a non-stair obstacle"),s;const{activeEdges:{high:o,low:a}}=e,[c,l]=[u.absMod(o-r,4),u.absMod(a-r,4)],{min:h,max:d}=t;let m=s;if(Math.abs(c-l)===2){const k=c%2!==0?"x":"y",H=l===0||l===3,Q=n[k];return Q<=h[k]?m+=H?-1:1:Q>=d[k]&&(m+=H?1:-1),m}const g=n.x<=h.x,R=n.x>=d.x,C=n.y<=h.y,T=n.y>=d.y;if(!g&&!R&&(!C&&!T))return s;const E=c+l===3,O=(d.y-h.y)/(d.x-h.x);if(E){const k=c<2;R||C&&!g||O*(n.x-d.x)>n.y-d.y?m+=k?1:-1:m+=k?-1:1}else{const k=c===0||c===3;g||C&&!R||O*(n.x-d.x)>n.y-h.y?m+=k?1:-1:m+=k?-1:1}return m}function v(e,r){const t=2**(e-1);return Object.freeze({[`${r}In`]:s=>s**e,[`${r}Out`]:s=>1-(1-s)**e,[`${r}InOut`]:s=>s<.5?t*s**e:1-t*(1-s)**e})}const it=Object.freeze({linear:e=>e,sineIn:e=>1-Math.cos(e*X),sineOut:e=>Math.sin(e*X),sineInOut:e=>(1-Math.cos(b*e))/2,circIn:e=>1-Math.sqrt(1-e*e),circOut:e=>Math.sqrt(1-(e-1)**2),circInOut:e=>e<.5?(1-Math.sqrt(1-(2*e)**2))/2:(Math.sqrt(1-(-2*(1-e))**2)+1)/2,elasticIn:e=>e===0||e===1?e:-(2**(10*(e-1)))*Math.sin(b*(40*(e-1)-3)/6),elasticOut:e=>e===0||e===1?e:2**(-10*e)*Math.sin(b*(40*e-3)/6)+1,elasticInOut:e=>e===0||e===1?e:e<.5?-(2**(10*(2*e-1)-1))*Math.sin(b*(80*(2*e-1)-9)/18):2**(-10*(2*e-1)-1)*Math.sin(b*(80*(2*e-1)-9)/18)+1,elasticOut2:e=>Math.pow(2,e*-10)*Math.sin((e-.75/4)*(b*2)/.75)+1,...v(2,"quadratic"),...v(3,"cubic"),...v(4,"quartic"),...v(5,"quintic"),...v(6,"sextic"),expoIn:e=>e<=0?0:2**(-10*(1-e)),expoOut:e=>e>=1?1:1-2**-(10*e),expoInOut:e=>e===0||e===1?e:e<.5?2**(10*(2*e-1)-1):1-2**(-10*(2*e-1)-1),backIn:e=>(Math.sqrt(3)*(e-1)+e)*e**2,backOut:e=>1+((Math.sqrt(3)+1)*e-1)*(e-1)**2,backInOut:e=>e<.5?4*e*e*(3.6*e-1.3):4*(e-1)**2*(3.6*e-2.3)+1});function L(e,r){return Math.random()*(r-e)+e}function ot(e,r){return Math.floor(L(e,r+1))}function ze(){return Math.random()<.5}function at(){return ze()?-1:1}function ct(e,r,t,s){return{x:L(e,r),y:L(t,s)}}function lt(){return L(-Math.PI,Math.PI)}function Ae(e,r,t){const s=L(0,Math.PI*2),n=L(0,r);return{x:e.x+Math.cos(s)*n,y:e.y+Math.sin(s)*n}}function Ge(e){return e[Math.floor(Math.random()*e.length)]}class ut{constructor(r){f(this,"_rng",0);this._rng=r}get(r=0,t=1){return this._rng=this._rng*16807%2147483647,u.lerp(r,t,this._rng/2147483647)}getInt(r=0,t=1){return Math.round(this.get(r,t))}}var $=(e=>(e[e.Circle=0]="Circle",e[e.Rect=1]="Rect",e[e.Group=2]="Group",e[e.Polygon=3]="Polygon",e))($||{});class P{static fromJSON(r){switch(r.type){case 0:return new q(r.radius,r.position);case 1:return new w(r.min,r.max);case 2:return new z(...r.hitboxes.map(t=>P.fromJSON(t)));case 3:return new A(r.points)}}[ae](){return this.clone(!1)}[B](){return this.clone(!0)}throwUnknownSubclassError(r){throw new Error(`Hitbox type ${$[this.type]} doesn't support this operation with hitbox type ${$[r.type]}`)}}class q extends P{constructor(t,s){super();f(this,"type",0);f(this,"position");f(this,"radius");this.position=s??i.create(0,0),this.radius=t}static simple(t,s){return{type:0,radius:t,position:s??i.create(0,0)}}toJSON(){return{type:this.type,radius:this.radius,position:i.clone(this.position)}}collidesWith(t){switch(t.type){case 0:return x.circleCollision(t.position,t.radius,this.position,this.radius);case 1:return x.rectangleCollision(t.min,t.max,this.position,this.radius);case 2:return t.collidesWith(this);case 3:return t.collidesWith(this.toRectangle())}}resolveCollision(t){switch(t.type){case 0:{const s=x.circleCircleIntersection(this.position,this.radius,t.position,t.radius);s&&(this.position=i.sub(this.position,i.scale(s.dir,s.pen)));break}case 1:{const s=x.rectCircleIntersection(t.min,t.max,this.position,this.radius);s&&(this.position=i.sub(this.position,i.scale(s.dir,s.pen)));break}case 2:{for(const s of t.hitboxes)this.collidesWith(s)&&this.resolveCollision(s);break}default:this.throwUnknownSubclassError(t)}}distanceTo(t){switch(t.type){case 0:return x.distanceBetweenCircles(t.position,t.radius,this.position,this.radius);case 1:return x.distanceBetweenRectangleCircle(t.min,t.max,this.position,this.radius);default:this.throwUnknownSubclassError(t)}}clone(t=!0){return new q(this.radius,t?i.clone(this.position):this.position)}transform(t,s=1,n=0){return new q(this.radius*s,i.addAdjust(t,this.position,n))}scale(t){this.radius*=t}intersectsLine(t,s){return x.lineIntersectsCircle(t,s,this.position,this.radius)}randomPoint(){return Ae(this.position,this.radius)}toRectangle(){return new w(i.create(this.position.x-this.radius,this.position.y-this.radius),i.create(this.position.x+this.radius,this.position.y+this.radius))}isPointInside(t){return _.distance(t,this.position)<this.radius}getCenter(){return this.position}}class w extends P{constructor(t,s){super();f(this,"type",1);f(this,"min");f(this,"max");this.min=t,this.max=s}static fromLine(t,s){return new w(i.create(u.min(t.x,s.x),u.min(t.y,s.y)),i.create(u.max(t.x,s.x),u.max(t.y,s.y)))}static fromRect(t,s,n=i.create(0,0)){const o=i.create(t/2,s/2);return new w(i.sub(n,o),i.add(n,o))}static simple(t,s,n=i.create(0,0)){const o=i.create(t/2,s/2);return{type:1,min:i.sub(n,o),max:i.add(n,o)}}toJSON(){return{type:this.type,min:i.clone(this.min),max:i.clone(this.max)}}collidesWith(t){switch(t.type){case 0:return x.rectangleCollision(this.min,this.max,t.position,t.radius);case 1:return x.rectRectCollision(t.min,t.max,this.min,this.max);case 2:case 3:return t.collidesWith(this)}}resolveCollision(t){switch(t.type){case 0:{const s=x.rectCircleIntersection(this.min,this.max,t.position,t.radius);if(s){const n=this.transform(i.scale(s.dir,-s.pen));this.min=n.min,this.max=n.max}break}case 1:{const s=x.rectRectIntersection(this.min,this.max,t.min,t.max);if(s){const n=this.transform(i.scale(s.dir,-s.pen));this.min=n.min,this.max=n.max}break}case 2:{for(const s of t.hitboxes)this.collidesWith(s)&&this.resolveCollision(s);break}default:this.throwUnknownSubclassError(t)}}distanceTo(t){switch(t.type){case 0:return x.distanceBetweenRectangleCircle(this.min,this.max,t.position,t.radius);case 1:return x.distanceBetweenRectangles(t.min,t.max,this.min,this.max)}this.throwUnknownSubclassError(t)}clone(t=!0){return new w(t?i.clone(this.min):this.min,t?i.clone(this.max):this.max)}transform(t,s=1,n=0){const o=_.transformRectangle(t,this.min,this.max,s,n);return new w(o.min,o.max)}scale(t){const s=(this.min.x+this.max.x)/2,n=(this.min.y+this.max.y)/2;this.min=i.create((this.min.x-s)*t+s,(this.min.y-n)*t+n),this.max=i.create((this.max.x-s)*t+s,(this.max.y-n)*t+n)}intersectsLine(t,s){return x.lineIntersectsRect(t,s,this.min,this.max)}randomPoint(){return{x:L(this.min.x,this.max.x),y:L(this.min.y,this.max.y)}}toRectangle(){return this.clone()}isPointInside(t){return t.x>this.min.x&&t.y>this.min.y&&t.x<this.max.x&&t.y<this.max.y}getCenter(){return{x:this.min.x+(this.max.x-this.min.x)/2,y:this.min.y+(this.max.y-this.min.y)/2}}isFullyWithin(t){return t.min.x<=this.min.x&&t.min.y<=this.min.y&&t.max.x>=this.max.x&&t.max.y>=this.max.y}}class z extends P{constructor(...t){super();f(this,"type",2);f(this,"position",i.create(0,0));f(this,"hitboxes");this.hitboxes=t}static simple(...t){return{type:2,hitboxes:t.map(s=>s.toJSON())}}toJSON(){return{type:2,hitboxes:this.hitboxes.map(t=>t.toJSON())}}collidesWith(t){return this.hitboxes.some(s=>s.collidesWith(t))}resolveCollision(t){t.resolveCollision(this)}distanceTo(t){let s=Number.MAX_VALUE,n;for(const o of this.hitboxes){let a;switch(o.type){case 0:switch(t.type){case 0:a=x.distanceBetweenCircles(t.position,t.radius,o.position,o.radius);break;case 1:a=x.distanceBetweenRectangleCircle(t.min,t.max,o.position,o.radius);break}break;case 1:switch(t.type){case 0:a=x.distanceBetweenRectangleCircle(o.min,o.max,t.position,t.radius);break;case 1:a=x.distanceBetweenRectangles(t.min,t.max,o.min,o.max)}break}a.distance<s&&(n=a,s=a.distance)}return n}clone(t=!0){return new z(...t?this.hitboxes.map(s=>s.clone(!0)):this.hitboxes)}transform(t,s,n){return this.position=t,new z(...this.hitboxes.map(o=>o.transform(t,s,n)))}scale(t){for(const s of this.hitboxes)s.scale(t)}intersectsLine(t,s){const n=[];for(const o of this.hitboxes){const a=o.intersectsLine(t,s);a&&n.push(a)}return n.sort((o,a)=>_.distanceSquared(o.point,t)-_.distanceSquared(a.point,t))[0]??null}randomPoint(){return Ge(this.hitboxes).randomPoint()}toRectangle(){const t=i.create(Number.MAX_VALUE,Number.MAX_VALUE),s=i.create(0,0);for(const n of this.hitboxes){const o=n.toRectangle();t.x=u.min(t.x,o.min.x),t.y=u.min(t.y,o.min.y),s.x=u.max(s.x,o.max.x),s.y=u.max(s.y,o.max.y)}return new w(t,s)}isPointInside(t){for(const s of this.hitboxes)if(s.isPointInside(t))return!0;return!1}getCenter(){return this.toRectangle().getCenter()}}class A extends P{constructor(t,s=i.create(0,0)){super();f(this,"type",3);f(this,"points");f(this,"center");this.points=t,this.center=s}static simple(t,s=i.create(0,0)){return{type:3,points:t,center:s}}toJSON(){return{type:this.type,points:this.points.map(t=>i.clone(t)),center:this.center}}collidesWith(t){switch(t.type){case 1:{if(this.isPointInside(t.min)||this.isPointInside(t.max))return!0;const s=this.points.length;for(let n=0;n<s;n++){const o=this.points[n];if(t.isPointInside(o))return!0;const a=this.points[(n+1)%s];if(x.lineIntersectsRectTest(a,o,t.min,t.max))return!0}return!1}case 2:case 0:return t.collidesWith(this)}this.throwUnknownSubclassError(t)}resolveCollision(t){this.throwUnknownSubclassError(t)}distanceTo(t){this.throwUnknownSubclassError(t)}clone(t=!0){return new A(t?this.points.map(i.clone):this.points)}transform(t,s=1,n=0){return new A(this.points.map(o=>i.scale(i.addAdjust(t,o,n),s)))}scale(t){for(let s=0,n=this.points.length;s<n;s++)this.points[s]=i.scale(this.points[s],t)}intersectsLine(t,s){throw new Error("Operation not supported")}randomPoint(){const t=this.toRectangle();let s;do s=t.randomPoint();while(!this.isPointInside(s));return s}toRectangle(){const t=i.create(Number.MAX_VALUE,Number.MAX_VALUE),s=i.create(0,0);for(const n of this.points)t.x=u.min(t.x,n.x),t.y=u.min(t.y,n.y),s.x=u.max(s.x,n.x),s.y=u.max(s.y,n.y);return new w(t,s)}isPointInside(t){const{x:s,y:n}=t;let o=!1;const a=this.points.length;for(let c=0,l=a-1;c<a;l=c++){const{x:h,y:d}=this.points[c],{x:m,y:g}=this.points[l];d>n!=g>n&&s<(m-h)*(n-d)/(g-d)+h&&(o=!o)}return o}getCenter(){return this.toRectangle().getCenter()}}const We={normal:{colors:{grass:"hsl(95, 41%, 38%)",water:"hsl(211, 63%, 42%)",border:"hsl(211, 63%, 30%)",beach:"hsl(40, 39%, 55%)",riverBank:"hsl(34, 41%, 32%)",trail:"hsl(35, 50%, 40%)",gas:"hsla(17, 100%, 50%, 0.55)",void:"hsl(25, 80%, 6%)"},reskin:"normal"},fall:{colors:{grass:"hsl(62, 42%, 32%)",water:"hsl(211, 63%, 42%)",border:"hsl(211, 63%, 30%)",beach:"hsl(40, 39%, 55%)",riverBank:"hsl(33, 50%, 30%)",trail:"hsl(35, 50%, 40%)",gas:"hsla(17, 100%, 50%, 0.55)",void:"hsl(25, 80%, 6%)"},ambience:"wind_ambience",defaultScope:"2x_scope",reskin:"fall",particleEffects:{frames:["leaf_particle_1","leaf_particle_2","leaf_particle_3"]}},halloween:{colors:{grass:"hsl(65, 100%, 12%)",water:"hsl(4, 100%, 14%)",border:"hsl(4, 90%, 12%)",beach:"hsl(33, 77%, 21%)",riverBank:"hsl(33, 50%, 25%)",trail:"hsl(35, 50%, 20%)",gas:"hsla(17, 100%, 50%, 0.55)",void:"hsl(25, 80%, 6%)"},inheritTexturesFrom:"fall",defaultScope:"2x_scope",specialMenuMusic:!0,darkShaders:!0,reskin:"fall"},winter:{colors:{grass:"hsl(210, 18%, 82%)",water:"hsl(211, 63%, 42%)",border:"hsl(208, 94%, 45%)",beach:"hsl(210, 18%, 75%)",riverBank:"hsl(210, 18%, 70%)",trail:"hsl(35, 50%, 40%)",gas:"hsla(17, 100%, 50%, 0.55)",void:"hsl(25, 80%, 6%)"},specialMenuMusic:!0,specialSounds:["airdrop_plane"],reskin:"winter",bulletTrailAdjust:"hsl(0, 50%, 80%)"}},ht=!1,dt=!1,mt=!1,ft=0,xt=me.Ground,gt=200;new p("red"),new p("yellow"),new p("white"),new p("orange"),new p("purple"),new p("cyan"),new p("teal"),new p("fuchsia"),new p("orangered"),new p("magenta"),new p("blue"),new p("lime");const re=We[De.modeName],je=Object.keys(re.colors).reduce((e,r)=>(e[r]=new p(re.colors[r]),e),{}),pt=je.grass.multiply(new p("hsl(0, 0%, 99%)")),bt=[new p("#00ffff"),new p("#ff00ff"),new p("#ffff00"),new p("#ff8000")],wt=20,yt=8,St=["top","right","bottom","left","win","death"],_t=Object.freeze({time:5,amplitude:1,wavelength:1,speed:100}),kt=5;export{ot as $,pe as A,P as B,q as C,_e as D,ke as E,ve as F,z as G,$ as H,y as I,ht as J,Ue as K,Le as L,ge as M,u as N,M as O,wt as P,Ve as Q,w as R,de as S,ye as T,je as U,i as V,Ye as W,ue as X,re as Y,Oe as Z,yt as _,we as a,lt as a0,L as a1,it as a2,st as a3,Ce as a4,kt as a5,be as a6,Ae as a7,pt as a8,mt as a9,ct as aa,at as ab,J as ac,Qe as ad,dt as ae,Ne as af,le as ag,bt as ah,nt as ai,_t as aj,He as ak,tt as al,Re as am,xt as an,ft as ao,Ge as ap,St as aq,qe as ar,gt as as,Je as at,Ee as b,W as c,Ze as d,De as e,Pe as f,D as g,A as h,G as i,x as j,ut as k,he as l,S as m,et as n,Ie as o,Me as p,rt as q,ze as r,X as s,Se as t,Be as u,Fe as v,me as w,_ as x,Te as y,Ke as z,te as τ};
